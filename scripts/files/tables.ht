(let arr {1 2 3})

(push arr 8)
(echo (pop arr)) ; Should print 8 ;
(echo (car arr)) ; Should print 1 ;
(echo (cdr arr)) ; Should print [2 3] ;

(echo (list 1 2 "something" 1)) ; Should print [1 2 "something"1 ] ;

(let arr1 {1 2 3 4 5})
(let arr2 {6 7 8 9 0})

(echo (extend arr1 arr2)) ; Should print [1 2 3 4 5 6 7 8] ;
(echo (len arr1)) ; Should print 4 ;
(echo (reverse arr1))
(echo (last arr1))
(echo (count arr1 1))
(echo (sort arr1))

(put arr1 2 1) ; Should put 1 in index 2 ; 

(maplist (lambda (x) (echo "Element:" x)) arr1); Should print element on newlines, Return null; 

(echo arr1)

(echo (nth arr2 0)); Should print 5; 

(let names {})
(sethash names "pspiagicw" "coder")
(gethash names "pspiagicw")

; Same table has separate place for hash ; 
(push names "pspiagicw")
(sethash names 1 "Max")

(echo (gethash names 1)) ; Prints "Max"; 
(echo (nth names 1)); Prints "pspiagicw" ;

(maphash (lambda (key value) (echo "Key:" key "Value:" value)) names)


(echo (minlist arr1))
(echo (maxlist arr1))

(echo (apply (lambda (x) (* x x)) arr1)) ; Prints [1 4 9 16] ;
(echo (reduce (lambda (x y) (+ x y)) arr1)) ; Prints sum of array ;
