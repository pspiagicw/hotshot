1 ; 1 ;
2 ; 2 ;
(? 2) ; prints 2 ;

; this is a comment! ;

;; All comments can be multiline, 
it simply matches till it encounters the double semicolon again ;;


(+ 2 1 2 1 2 3 4 1 1) ;; 17 ;;
(- 2 1) ;; 1 ;;
(* 2 1) ;; 2; ;;
(/ 2 1 2 1 1 2 3) ;; 0 ;;
(% 2 1) ;; 1 ;;

(+ (+ 2 1) (+ 1 2) (/ 2 1)) ;; some long expression ;;

() ;; () ;;
 
true ;; true ;;

false ;; false ;;

(not true) ;; false ;;

(not false) ;;  true ;;

(and false true) ;; false ;;
(and true true) ;; true ;;

(or true false) ;;  true ;;


(bool 1) ;; true ;;
(bool 0) ;; false ;;

(bool ()) ;; false ;;
(bool (2)) ;; false ;;
(bool true) ;; true ;;
(bool "") ;; false ;;
(bool "some") ;; true ;;

(= 1 2) ;; false ;;
(= 1 1) ;; true ;; 
(= "some" "some") ;; true ;;

(= < 1 2) ;; true ;;
(= < 1 1) ;; true ;;
(= > 1 2) ;; false ;;
(= > 2 2) ;; true ;;

(> 1 2) ;; false ;;

(= < 100 val = > 2)
(= > 100 val = < 2)

"this is a string!" ;; "this is a string" ;;

(# "length") ;; 6 ;;

(? "print this string!") ;; prints string ;;


($ name "pspiagicw") ;; assigns name to "pspiagicw" ;;

(? "my name is $name" name) ;; prints "my name is pspiagicw" ;; 

(? "The result is $(+ 1 2)") ;; prints "The result is 3"

($ someVar 2) ;; assign someVar to 2 ;;
(? someVar) ;; print someVar ;;

($ someOtherVar "a simple string")
(? someOtherVar)


